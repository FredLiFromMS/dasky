user  proxy;
worker_processes  1;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    proxy_buffer_size           32k;
    proxy_buffers               4 32k;
    client_header_buffer_size   64k;
    large_client_header_buffers 4 64k;
    client_max_body_size        512m;

    ssl_verify_client on;
    ssl_verify_depth 2;
    ssl_client_certificate /mnt/batch/tasks/startup/wd/BaltimoreCyberTrustRoot.pem;

    map $ssl_client_s_dn $s_cn {
        default "foo";
        ~CN=(?<tmp>[^/,]+) $tmp;
    }

    map $ssl_client_i_dn $i_cn {
        default "foo";
        ~CN=(?<tmp>[^/,]+) $tmp;
    }

    server {
        listen       44224 ssl default_server;
        server_name  dsvm.local;

        ssl_protocols TLSv1.2;

        ssl_certificate /mnt/batch/tasks/startup/certs/sha1-d1f48ab4dfe4fae143bd5bbeb383737d4a07c049.pem;
        ssl_certificate_key /mnt/batch/tasks/startup/certs/sha1-d1f48ab4dfe4fae143bd5bbeb383737d4a07c049.key;

        if ($i_cn !~ "^Microsoft IT TLS CA \d$") {
            return 401;
        }
        if ($s_cn != northcentralus.identity.notebooks.azureml.net) {
            return 401;
        }
        if ($host ~* ^([0-9]+)\.dsvm.local$) {
            set $proxyhost 127.0.0.1:$1;
        }
        if ($host !~* ^([0-9]+)\.dsvm.local$) {
            return 401;
        }

        location / {
            proxy_pass          http://$proxyhost;
            proxy_set_header    Host $http_x_forwarded_host;
        }

        location ~ (/api/kernels/|/terminals/websocket/|/ws|/p\/(\w+)\/terminal\/(\w+)/|/websocket/) {
            proxy_pass            http://$proxyhost;
            proxy_set_header      Host $http_x_forwarded_host;
            # websocket support
            proxy_http_version    1.1;
            proxy_set_header      Upgrade "websocket";
            proxy_set_header      Connection "Upgrade";
            proxy_read_timeout    86400;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
